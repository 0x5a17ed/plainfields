// Top-level EBNF grammar for the plainfields syntax.

// Note: Ordered values MUST come before labeled values.
FieldList           ::= WS* (OrderedSection WS* ("," WS* LabeledSection)? | LabeledSection) WS*

OrderedSection      ::= OrderedValue (WS* "," WS* OrderedValue)*

OrderedValue        ::= Value

LabeledSection      ::= AssignmentField (WS* "," WS* AssignmentField)*

AssignmentField     ::= PrefixedIdentifier | Identifier ValueBinding

ValueBinding        ::= WS* "=" WS* ValueContent?

ValueContent        ::= DictValue | ListValue | SingleValue

SingleValue         ::= Value

ListValue           ::= Value WS* ListSeparator WS* ( Value ( WS* ListSeparator WS* Value )* )?

DictValue           ::= DictEntry ( WS* ListSeparator WS* DictEntry )*

DictEntry           ::= PrefixedIdentifier | DictPair

DictPair            ::= DictKey WS* PairSeparator WS* Value

DictKey             ::= Identifier | String | Number

PrefixedIdentifier  ::= ( "^" | "!" ) Identifier

Value               ::= Identifier | Number | String | "true" | "false" | "nil"

Identifier          ::= Letter ( Letter | Digit | "-" | "_" )*

Number              ::= Sign? ( DecimalNumber | HexNumber | OctalNumber | BinaryNumber )

Sign                ::= "+" | "-"

DecimalNumber       ::= Digit ( Digit | "_" )*
                        ( "." ( Digit | "_" )* )?
                        ( ( "e" | "E" ) Sign? Digit ( Digit | "_" )* )?

HexNumber           ::= "0" ( "x" | "X" ) HexDigit ( HexDigit | "_" )*
                        ( "." ( HexDigit | "_" )* )?
                        ( ( "p" | "P" ) Sign? Digit ( Digit | "_" )* )?

OctalNumber         ::= "0" ( "o" | "O" ) OctalDigit ( OctalDigit | "_" )*

BinaryNumber        ::= "0" ( "b" | "B" ) BinaryDigit ( BinaryDigit | "_" )*

String              ::= '"' ( [^"\\] | "\\" . )* '"' | "'" ( [^'\\] | "\\" . )* "'"

FieldSeparator      ::= ","

ListSeparator       ::= ";"

PairSeparator       ::= ":"

WS                  ::= ( " " | "\t" | "\n" | "\r" )+

Letter              ::= [A-Za-z]

Digit               ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

HexDigit            ::= Digit
                        | "A" | "B" | "C" | "D" | "E" | "F"
                        | "a" | "b" | "c" | "d" | "e" | "f"

OctalDigit          ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7"

BinaryDigit         ::= "0" | "1"
