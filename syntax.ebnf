// Top-level EBNF grammar for the plainfields syntax.
FieldList           ::= WS* (OrderedSection WS* ("," WS* LabeledSection)? | LabeledSection) WS*

OrderedSection      ::= OrderedValue (WS* "," WS* OrderedValue)*

OrderedValue        ::= Value

LabeledSection      ::= AssignmentField (WS* "," WS* AssignmentField)*

AssignmentField     ::= ( "^" | "!" ) Identifier | Identifier ValueBinding

ValueBinding        ::= WS* "=" WS* ValueContent?

ValueContent        ::= DictContainer | ListContainer | SingleValue

SingleValue         ::= Value

ListContainer       ::= Value WS* ListSeparator WS* ( Value ( WS* ListSeparator WS* Value )* )?

DictContainer       ::= DictPair ( WS* ListSeparator WS* DictPair )*

DictPair            ::= DictKey WS* PairSeparator WS* Value

DictKey             ::= Identifier | String | Number

Value               ::= Identifier | Number | String | "true" | "false" | "nil"

Identifier          ::= Letter ( Letter | Digit | "-" | "_" )*

Number              ::= Sign? ( DecimalNumber | HexNumber | OctalNumber | BinaryNumber )

Sign                ::= "+" | "-"

DecimalNumber       ::= Digit ( Digit | "_" )*
                        ( "." ( Digit | "_" )* )?
                        ( ( "e" | "E" ) Sign? Digit ( Digit | "_" )* )?

HexNumber           ::= "0" ( "x" | "X" ) HexDigit ( HexDigit | "_" )*
                        ( "." ( HexDigit | "_" )* )?
                        ( ( "p" | "P" ) Sign? Digit ( Digit | "_" )* )?

OctalNumber         ::= "0" ( "o" | "O" ) OctalDigit ( OctalDigit | "_" )*

BinaryNumber        ::= "0" ( "b" | "B" ) BinaryDigit ( BinaryDigit | "_" )*

String              ::= '"' ( [^"\\] | "\\" . )* '"' | "'" ( [^'\\] | "\\" . )* "'"

FieldSeparator      ::= ","

ListSeparator       ::= ";"

PairSeparator       ::= ":"

WS                  ::= [ \t\n\r]+

Letter              ::= [A-Za-z]

Digit               ::= [0-9]

HexDigit            ::= [0-9A-Fa-f]

OctalDigit          ::= [0-7]

BinaryDigit         ::= [01]
